import { Injectable } from '@nestjs/common';
import * as fs from 'fs/promises';
import * as path from 'path';
import { Album } from '../album/album.entity.js';
import { Item } from '../item/item.entity.js';
import { ItemService } from '../item/item.service.js';
import { TypedConfigService } from '../typed-config/typed-config.service.js';

@Injectable()
export class SyncthingService {
  private data: number[] = [];
  private stignoreFilePath: string;

  constructor(
    private readonly trackService: ItemService,
    private readonly config: TypedConfigService
  ) {
    this.stignoreFilePath = path.join(
      this.config.get('BEETS_LIBRARY_ROOT'),
      this.config.get('SYNCTHING_STIGNORE_FILE_NAME'),
    );
  }

  escapeSyncthingPath(path: string): string {
    return path.toString();
  }

  async writeSyncthingFile(items: Pick<Item, 'path'>[], albumArtPath: Pick<Album, 'artpath'>[]) {
    const paths = [
      ...items.map(item => item.path),
      ...albumArtPath.map(item => item.artpath)
    ]
      .filter(path => path?.length && path.length > 0)
      .map(path => `!${this.escapeSyncthingPath(path!)}`)
      .sort();

    try {
      await fs.writeFile(this.stignoreFilePath, [
        '### AUTOGENERATED FILE - DO NOT EDIT ###',
        '*',
        ...paths
      ]);

    } catch (e) {
      console.error(`Couldn't write the Syncthing file at ${this.stignoreFilePath} with ${this.data.length} lines: `, e);
      throw e;
    }
  }
}
